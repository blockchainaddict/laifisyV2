[{"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/index.js":"1","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/reportWebVitals.js":"2","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/App.js":"3","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Home.jsx":"4","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/tiktok.js":"5","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/media_list.js":"6","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/SocialMedia.jsx":"7","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/ig.js":"8","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/IG.js":"9","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/TikTok.js":"10","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/Pinterest.js":"11","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/GenericSocialMedia.jsx":"12","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/GenericOrgPost.jsx":"13","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/Header.jsx":"14","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Create.jsx":"15","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Posts.jsx":"16","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/post/IgPost.jsx":"17","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/post/overlay.jsx":"18","/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Dashboard.jsx":"19"},{"size":579,"mtime":1688327682279,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1688327055159,"results":"22","hashOfConfig":"21"},{"size":1063,"mtime":1688505146560,"results":"23","hashOfConfig":"21"},{"size":3123,"mtime":1688508350677,"results":"24","hashOfConfig":"21"},{"size":1163,"mtime":1688341404078,"results":"25","hashOfConfig":"21"},{"size":317,"mtime":1688355790543,"results":"26","hashOfConfig":"21"},{"size":304,"mtime":1688345503168,"results":"27","hashOfConfig":"21"},{"size":1105,"mtime":1688340789111,"results":"28","hashOfConfig":"21"},{"size":1044,"mtime":1688538510011,"results":"29","hashOfConfig":"21"},{"size":1756,"mtime":1688538258581,"results":"30","hashOfConfig":"21"},{"size":918,"mtime":1688537575429,"results":"31","hashOfConfig":"21"},{"size":5354,"mtime":1688520393034,"results":"32","hashOfConfig":"21"},{"size":1550,"mtime":1688538638917,"results":"33","hashOfConfig":"21"},{"size":965,"mtime":1688356318282,"results":"34","hashOfConfig":"21"},{"size":5291,"mtime":1688505176654,"results":"35","hashOfConfig":"21"},{"size":436,"mtime":1688356878272,"results":"36","hashOfConfig":"21"},{"size":9925,"mtime":1688433599457,"results":"37","hashOfConfig":"21"},{"size":4835,"mtime":1688433599458,"results":"38","hashOfConfig":"21"},{"size":6364,"mtime":1688538561839,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1s1nw4t",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/index.js",[],[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/reportWebVitals.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/App.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Home.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/tiktok.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/media_list.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/SocialMedia.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/ig.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/IG.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/TikTok.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/data/Pinterest.js",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/GenericSocialMedia.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/GenericOrgPost.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/Header.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Create.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Posts.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/post/IgPost.jsx",["100","101","102","103","104","105","106","107","108"],[],"import \"./App.css\";\nimport { FiMoreHorizontal } from \"react-icons/fi\";\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\nimport { FiMessageSquare, FiBookmark } from \"react-icons/fi\";\nimport { RiShareForwardLine } from \"react-icons/ri\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport {BsFillBookmarkFill} from \"react-icons/bs\";\nimport {OverlayTest as ShowOverlay} from \"./overlay\";\nimport { useMediaQuery } from 'react-responsive'\n\nconst accountIndex = 0;\nconst account = {\n  name: 'Pushkar Mishra',\n  id: 'pushkarm029',\n  url: 'https://images.unsplash.com/photo-1510915228340-29c85a43dcfe?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8Y29kZXJ8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60',\n  description: 'Full Stack Web Developer | 18 | Fresher @ BITS Pilani https://github.com/@pushkarm029',\n  followers: '452',\n  following: '77',\n  posts: [{\n      number: '1',\n      imageurl: 'https://plus.unsplash.com/premium_photo-1681987448291-1e5985657c0a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80?width=400&height=400',\n      likes: '10',\n      caption: 'Hello Hello Kon rabb Deep',\n      comment: 'Nice Project'\n  },{\n    number: '2',\n    imageurl: 'https://images.unsplash.com/photo-1682337743362-ad67a2248b07?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDF8Ym84alFLVGFFMFl8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=60',\n    likes: '1M',\n    caption: 'Hello Hello Kon rabb Deep',\n    comment: 'Nice Project'\n  },{\n    number: '3',\n    imageurl: 'https://images.unsplash.com/photo-1682687981922-7b55dbb30892?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDh8Ym84alFLVGFFMFl8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=60',\n    likes: '14',\n    caption: 'Hello Hello Kon rabb Deep',\n    comment: 'Nice Project'\n  },{\n    number: '4',\n    imageurl: 'https://plus.unsplash.com/premium_photo-1663954866095-373f8c814417?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDE1fGJvOGpRS1RhRTBZfHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=500&q=60',\n    likes: '1B',\n    caption: 'Hello Hello Kon rabb Deep',\n    comment: 'Nice Project'\n  },{\n    number: '5',\n    imageurl: 'https://images.unsplash.com/photo-1682977821515-ec343a4862c4?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80',\n    likes: '1T',\n    caption: 'Hello Hello Kon rabb Deep',\n    comment: 'Nice Project'\n  }]\n}\n\nfunction randomizeHomePosts(arr) {\n  const shuffledArray = [...arr];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n}\n\nfunction randomNumberToShowPosts(num) {\n  return Math.floor(Math.random() * num);\n}\n\nfunction CheckUsername(text) {\n  let length = text.length;\n  if (length >= 11) {\n    return text.slice(0, 8) + \"...\";\n  } else {\n    return text;\n  }\n}\n\nfunction HomeLike({ liked, onClick}) {\n  if (liked) {\n    return <AiFillHeart onClick={onClick} size={25} color=\"#FF3040\" style={{ paddingRight: '7px', paddingTop: '7px', paddingBottom: '7px' }} />;\n  }\n  return <AiOutlineHeart onClick={onClick} size={25} color=\"white\" style={{ paddingRight: '7px', paddingTop: '7px', paddingBottom: '7px' }} />;\n}\n\nfunction HomeBookmark({ bookmark, onClick}) {\n  if (bookmark) {\n    return <BsFillBookmarkFill onClick={onClick} size={22} color=\"white\" style={{  paddingRight: '8px', paddingTop: '7px', paddingBottom: '7px' }} />\n  }\n  return <FiBookmark onClick={onClick} size={25} color=\"white\" style={{ paddingRight: '7px', paddingTop: '7px', paddingBottom: '7px' }} />;\n}\n\nfunction LikeMeter ({accountId, postNumber, likeCount, likedImages}){\n  let likeCountinLikeMeter = likeCount;\n  const imageId = `${accountId}+${postNumber}`;\n  if (likedImages.includes(imageId)) {\n    return <p className=\"homeLikeMeter\">{++likeCountinLikeMeter} Likes</p>; \n  } else {\n    return <p className=\"homeLikeMeter\">{likeCountinLikeMeter} Likes</p>;\n  }\n};\n\n// storing all props as array in a state then passing it to the overlay component is a good idea for now\n\nexport default function Body() {\n  const isDesktopOrLaptop = useMediaQuery({query: '(min-width: 1224px)'})\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1824px)' })\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' })\n  // const [randomizedAccountList, setRandomizedAccountList] = useState(randomizeHomePosts(account));\n  // const [randomizedStoryList, setRandomizedStoryList] = useState(randomizeHomePosts(account));\n  const [randomizedNumber, setRandomizedNumber] = useState(randomNumberToShowPosts(3));\n  const [ShowOverlayState, setShowOverlayState] = useState([false, \"\", \"\", \"\", \"\"]);\n  const [showOverlay, overlayId, overlayCaption, overlayLikes, overlayImageID] = ShowOverlayState;\n  \n\n  const handleOverlayStateChange = () => {\n    setShowOverlayState(prevState => [!prevState[0], ...prevState.slice(1)]);\n  };\n\n\n  // later i want a add a algo so it finds a random value between posts.length(of a particular account(inside a map)) and 0\n  const [likedImages, setLikedImages] = useState([]);\n  const[bookmark, setBookmark] = useState([]);\n  const handleDoubleClick = (accountId, postNumber) => {\n    const likedImage = `${accountId}+${postNumber}`;\n    setLikedImages(prevLikedImages => [...prevLikedImages, likedImage]);\n  };\n  const handleClick = (accountId, postNumber) => {\n    const imageId = `${accountId}+${postNumber}`;\n    if (likedImages.includes(imageId)) {\n      setLikedImages(prevLikedImages => prevLikedImages.filter(image => image !== imageId)); \n    } else {\n      setLikedImages(prevLikedImages => [...prevLikedImages, imageId]);\n    }\n  };\n  const handleBookmark = (accountId, postNumber) => {\n    const bookmarkId = `${accountId}+${postNumber}`;\n    if (bookmark.includes(bookmarkId)) {\n      setBookmark(prevBookmarkImages => prevBookmarkImages.filter(image => image !== bookmarkId)); \n    } else {\n      setBookmark(prevBookmarkImages => [...prevBookmarkImages, bookmarkId]);\n    }\n  };\n\n  // const handleOverlay = (ShowOverlayState,) => {};\n  return (\n    <div className=\"body\">\n      {showOverlay && <ShowOverlay onStateChange={handleOverlayStateChange}  OverAcID={overlayId} OverAcCaption={overlayCaption} OverAcLikes={overlayLikes} OverAcImages={overlayImageID} />}\n      {/* <div className=\"stories\">\n        {randomizedStoryList.slice(0, 8).map((account) => (\n          <div key={account.id} className=\"storyinner\">\n            <img src={account.url} alt={account.name} />\n            <p>{CheckUsername(account.id)}</p>\n          </div>\n        ))}\n      </div> */}\n      <div className=\"posts\">\n       \n          <div className=\"post\" key={account.id}>\n              {account.posts.length > 0 ? (\n                <div className=\"individualpost\" key={account.posts[randomizedNumber].number}>\n                  <div className=\"postheader\">\n                    <div className=\"postheaderpartone\">\n                      <img src={account.url} alt={account.id} />\n                      <p className=\"postheadertopid\">{account.id}</p>\n                      <p className=\"postheadertopduration\">· 1 d</p>\n                    </div>\n                    <FiMoreHorizontal color=\"white\" size={20} />\n                  </div>\n                  <div key={account.posts[randomizedNumber].number}>\n                    <div\n                      onDoubleClick={() => handleDoubleClick(account.id, account.posts[randomizedNumber].number)}\n                      className=\"postimage\"\n                    >\n                      <img src={account.posts[randomizedNumber].imageurl} \n                        alt=\"\" \n                      />\n                    </div>\n                    <div className=\"interactablepost\">\n                      <div className=\"interactablepostleft\">\n                        <HomeLike onClick={() => handleClick(account.id, account.posts[randomizedNumber].number)} liked={likedImages.includes(`${account.id}+${account.posts[randomizedNumber].number}`)} />\n                        <FiMessageSquare\n                          onClick={() => setShowOverlayState([true, account.id, account.posts[randomizedNumber].caption, account.posts[randomizedNumber].likes, account.posts[randomizedNumber].imageurl])}\n                          size={25}\n                          color=\"white\"\n                          style={{ paddingLeft: '7px', paddingRight: '7px', paddingTop: '7px', paddingBottom: '7px' }}\n                        />       \n                        <RiShareForwardLine size={25} color=\"white\" style={{ paddingLeft: '7px', paddingTop: '7px', paddingBottom: '7px' }} />\n                      </div>\n                      <div className=\"interactablepostright\">\n                        <HomeBookmark onClick={() => handleBookmark(account.id, account.posts[randomizedNumber].number)} bookmark={bookmark.includes(`${account.id}+${account.posts[randomizedNumber].number}`)}/>\n                      </div>\n                    </div>\n                    <div className=\"postfooter\">\n                      <LikeMeter accountId={account.id} postNumber={account.posts[randomizedNumber].number} likeCount={account.posts[randomizedNumber].likes} likedImages={likedImages} />\n                      <div className=\"postfootercaption\">\n                        <p className=\"postFooterAccountName\">{account.name}</p>\n                        <p className=\"postFooterAccountCaption\">{account.posts[randomizedNumber].caption}</p>\n                      </div>\n                      <p>1 comment</p>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <p>No post available</p>\n              )}\n          </div>\n      </div>\n    </div>\n  );\n}",[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/components/post/overlay.jsx",[],[],"/Users/user/OneDrive/Programming/JS/proyectos_reales/social-media-help/src/pages/Dashboard.jsx",[],[],{"ruleId":"109","severity":1,"message":"110","line":12,"column":7,"nodeType":"111","messageId":"112","endLine":12,"endColumn":19},{"ruleId":"109","severity":1,"message":"113","line":53,"column":10,"nodeType":"111","messageId":"112","endLine":53,"endColumn":28},{"ruleId":"109","severity":1,"message":"114","line":66,"column":10,"nodeType":"111","messageId":"112","endLine":66,"endColumn":23},{"ruleId":"109","severity":1,"message":"115","line":102,"column":9,"nodeType":"111","messageId":"112","endLine":102,"endColumn":26},{"ruleId":"109","severity":1,"message":"116","line":103,"column":9,"nodeType":"111","messageId":"112","endLine":103,"endColumn":20},{"ruleId":"109","severity":1,"message":"117","line":104,"column":9,"nodeType":"111","messageId":"112","endLine":104,"endColumn":25},{"ruleId":"109","severity":1,"message":"118","line":105,"column":9,"nodeType":"111","messageId":"112","endLine":105,"endColumn":19},{"ruleId":"109","severity":1,"message":"119","line":106,"column":9,"nodeType":"111","messageId":"112","endLine":106,"endColumn":17},{"ruleId":"109","severity":1,"message":"120","line":109,"column":28,"nodeType":"111","messageId":"112","endLine":109,"endColumn":47},"no-unused-vars","'accountIndex' is assigned a value but never used.","Identifier","unusedVar","'randomizeHomePosts' is defined but never used.","'CheckUsername' is defined but never used.","'isDesktopOrLaptop' is assigned a value but never used.","'isBigScreen' is assigned a value but never used.","'isTabletOrMobile' is assigned a value but never used.","'isPortrait' is assigned a value but never used.","'isRetina' is assigned a value but never used.","'setRandomizedNumber' is assigned a value but never used."]